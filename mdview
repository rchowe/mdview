#!/usr/bin/env ruby

require 'tempfile'
require 'pathname'

def openInBrowser( filename )
    # Ripped from the Sage viewer, but should work

    # An ugly workaround to get this to run in the background
    platform = RUBY_PLATFORM.downcase
    if platform.include? 'linux'
            system "x-www-browser \"#{url}\" 2>/dev/null &"
        elsif platform.include? 'mswin'
            `start "#{url}"`
        elsif platform.include? 'darwin'
            `open "#{url}"`
    end
end

def error( text )
	$stderr.puts "\033[31;1mError\033[0m: #{text}"
end

# Check for an argument
if ARGV[0].nil?
	error( "No file path specified" )
	exit
end

# Check if markdown is present
if `which markdown`.nil?
	error "Markdown binary not found (Is it in your $PATH?)"
	exit
end

stylesheet = nil

mdstyle = Pathname.new( ENV['HOME'] ) + '.mdstyle.css'
if mdstyle.exist?
	stylesheet = mdstyle.read
else
	stylesheet = <<END_STYLE
	body
	{
		font-family: 'Helvetica Neue', 'DejaVu Sans Light', 'Segoe UI', 'Helvetica', sans-serif;
		font-weight: 300;
	}
END_STYLE
end

data = `markdown "#{ARGV[0]}"`
path = Pathname.new( ARGV[0] )

html = <<END_HTML
<!DOCTYPE html>
<html lang = "en">
	<head>
		<title>#{path.basename( path.extname )}</title>
	
		<style>
			#{stylesheet}
		</style>
	</head>
	
	<body>
		<content>
#{data}
		</content>
	</body>
</html>
END_HTML

Tempfile.open( ['mdview', '.html'] ) do |tmp|
	tmp.puts html
	tmp.flush
	openInBrowser( "file://#{tmp.path}" )
end
